version: "3.7"

services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      - account_db
    environment:
      DATABASE_URL: postgres://spidey:123456@account_db/spidey?sslmode=disable
    restart: on-failure

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      - catalog_db
    environment:
      DATABASE_URL: http://catalog_db:9200
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      - order_db
    environment:
      DATABASE_URL: postgres://spidey:123456@order_db/spidey?sslmode=disable
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
    restart: on-failure

  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - 8000:8080
    depends_on:
      - account
      - catalog
    environment:
      ACCOUNT_SERVICE_URL: account:8080
      CATALOG_SERVICE_URL: catalog:8080
      ORDER_SERVICE_URL: order:8080
    restart: on-failure

  account_db:
    build:
      context: ./account
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: spidey
      POSTGRES_USER: spidey
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped

  catalog_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node

  order_db:
    build:
      context: ./order
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: spidey
      POSTGRES_USER: spidey
      POSTGRES_PASSWORD: 123456
    restart: unless-stopped

  todo:
    build:
      args:
        - http_proxy=${HTTP_PROXY}
        - https_proxy=${HTTPS_PROXY}
      context: .
      dockerfile: ./todo/app.dockerfile
    depends_on:
      - todo_db
    command: |
      todo run --url="postgres://${TODO_DB_POSTGRES_USER}:${TODO_DB_POSTGRES_PASSWORD}@${TODO_DB_POSTGRES_HOST}/${TODO_DB_POSTGRES_DB}?sslmode=disable"
    # tty: true
    # for testing only
    # ports:
    #   - 8080:8080
    restart: on-failure

  todo_db:
    build:
      context: ./todo
      dockerfile: ./db.dockerfile
    environment:
      POSTGRES_DB: ${TODO_DB_POSTGRES_DB}
      POSTGRES_USER: ${TODO_DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TODO_DB_POSTGRES_PASSWORD}
    # for testing only
    # ports:
    #   - 5432:5432
    restart: unless-stopped
